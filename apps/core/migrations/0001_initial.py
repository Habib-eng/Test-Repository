# Generated by Django 4.1.10 on 2024-01-04 21:02

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import djongo.models.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('firstname', models.CharField(default=None, max_length=30, null=True)),
                ('lastname', models.CharField(default=None, max_length=30, null=True)),
                ('company', models.CharField(default=None, max_length=30, null=True)),
                ('position', models.CharField(default=None, max_length=30, null=True)),
                ('phoneNumber', models.CharField(default=None, max_length=30, null=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('country', models.CharField(default=None, max_length=30, null=True)),
                ('is_staff', models.BooleanField(default=False, null=True)),
                ('is_active', models.BooleanField(default=True, null=True)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DocumentMetadata',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('extension', models.CharField(choices=[('png', None), ('jpg', None), ('jpeg', None)], max_length=255)),
                ('uploaded_date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='DocumentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default=None, max_length=255)),
                ('image_url', models.URLField()),
                ('comment', models.CharField(default=None, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ImageMetadata',
            fields=[
                ('_id', djongo.models.fields.ObjectIdField(auto_created=True, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('extension', models.CharField(choices=[('png', None), ('jpg', None), ('jpeg', None)], max_length=255)),
                ('url', models.URLField(default='', max_length=255)),
                ('uploaded_date', models.DateTimeField(auto_now_add=True)),
                ('annotations', models.TextField()),
                ('project_ref', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Plan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('price_per_year', models.CharField(max_length=255)),
                ('usage_limit', models.IntegerField(default=None, null=True)),
                ('description', models.TextField()),
                ('features', models.JSONField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('deleted_at', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='PrebuiltOCRModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('document', models.CharField(max_length=255)),
                ('description', models.TextField(null=True)),
                ('image', models.URLField(default='')),
                ('category', models.CharField(default='', max_length=5)),
                ('ocr_endpoint', models.URLField(default=None, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('is_active', models.BooleanField(default=True)),
                ('usage_rate', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('plan', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='core.plan')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='core.prebuiltocrmodel')),
            ],
            options={
                'unique_together': {('product', 'owner', 'plan')},
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=255, unique=True)),
                ('type', models.IntegerField(choices=[(0, 'Based On Prebuilt Model'), (1, 'Custom Model')])),
                ('state', models.CharField(choices=[('Created', 'Created'), ('Images imported', 'Images imported'), ('Images labeled', 'Images labeled'), ('Model Trained', 'Model Trained'), ('Model Deployed', 'Model Deployed')], default='Created', max_length=20)),
                ('description', models.TextField(null=True)),
                ('labels', models.JSONField(default=None, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('based_document', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='core.documenttype')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='customuser',
            name='products',
            field=models.ManyToManyField(related_name='products', through='core.Subscription', to='core.prebuiltocrmodel'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
        migrations.CreateModel(
            name='Attempt',
            fields=[
                ('document_location', models.URLField(default=None, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('result', models.JSONField(default=None, null=True)),
                ('document_metadata', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='core.documentmetadata')),
                ('subscription', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='core.subscription')),
            ],
        ),
    ]
